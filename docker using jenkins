pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'your-docker-registry-url'
        DOCKERFILE_PATH = 'path/to/Dockerfile'
        DOCKER_IMAGE_NAME = 'your-docker-image-name'
        ARTIFACTORY_URL = 'your-artifactory-url'
        ARTIFACTORY_REPO = 'your-artifactory-repository'
        ARTIFACTORY_CREDENTIALS_ID = 'your-artifactory-credentials-id'
    }

    stages {
        stage('Build and Push Docker Image') {
            steps {
                script {
                    // Build Maven project
                    sh 'mvn clean install'

                    // Build Docker image
                    docker.build("${DOCKER_IMAGE_NAME}:${env.BUILD_ID}", "-f ${DOCKERFILE_PATH} .")

                    // Login to Docker registry
                    docker.withRegistry("${DOCKER_REGISTRY}", "${DOCKER_REGISTRY_CREDENTIALS_ID}") {
                        // Push Docker image
                        docker.image("${DOCKER_IMAGE_NAME}:${env.BUILD_ID}").push("${env.BUILD_ID}")

                        // Tag and push Docker image as latest
                        docker.image("${DOCKER_IMAGE_NAME}:${env.BUILD_ID}").tag("${DOCKER_IMAGE_NAME}:latest")
                        docker.image("${DOCKER_IMAGE_NAME}:latest").push()
                    }
                }
            }
        }
    }

    post {
        always {
            // Cleanup Docker images
            cleanWs()
            sh "docker rmi ${DOCKER_IMAGE_NAME}:${env.BUILD_ID}"
            sh "docker rmi ${DOCKER_IMAGE_NAME}:latest"
        }
    }
}
